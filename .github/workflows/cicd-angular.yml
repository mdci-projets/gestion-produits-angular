name: CI/CD Angular avec Cypress

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: 🔍 Lint, Test & Cypress
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout du Code
        uses: actions/checkout@v4

      - name: 🏗️ Installer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Installer les Dépendances
        run: npm ci

      - name: 🔍 Vérification du Code (Lint)
        run: npx eslint src/

      - name: 🛠️ Lancer les Tests Unitaires
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      - name: 🌐 Démarrer l'Application en Mode Test
        run: npm run start &  # Lancer l'application Angular en arrière-plan
        env:
          CYPRESS_BASE_URL: http://localhost:4300  # Assurez-vous que c'est l'URL correcte

      - name: ⏳ Attendre que l'Application Soit Prête
        run: sleep 10 # Attendez quelques secondes pour être sûr que l'app est prête

      - name: ✅ Exécuter les Tests E2E avec Cypress
        uses: cypress-io/github-action@v6
        with:
          start: npm run start  # Démarrer Angular avant les tests
          wait-on: 'http://localhost:4300'  # Attendre que l'application soit prête
          browser: chrome  # Exécuter les tests sur Chrome

  cd:
    name: 🚀 Build & Deploy
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout du Code
        uses: actions/checkout@v4

      - name: 🔑 Se Connecter à AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🌍 Récupérer l'IP Publique de l'EC2
        id: get-ec2-ip
        run: |
          PUBLIC_IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=spring-boot-ec2" "Name=instance-state-name,Values=running" \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)

          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "🔹 L'IP publique de l'EC2 est : $PUBLIC_IP"

      - name: 🛠️ Modifier `config.json` pour Injecter l'IP du Backend
        run: |
          jq '.productsApiUrl = "http://'$PUBLIC_IP':8080"' public/assets/config.json > public/assets/config_tmp.json
          mv public/assets/config_tmp.json public/assets/config.json
          echo "✅ URL du Backend injectée : http://$PUBLIC_IP:8080"

      - name: 🏗️ Installer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Installer les Dépendances
        run: npm ci

      - name: 🏗️ Construire l'Application
        run: npm run build -- --configuration=production

      - name: 🚀 Déploiement sur GitHub Pages
        if: success()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist/fronted-angular/browser
          clean: true